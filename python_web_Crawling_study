{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOFzGv79052T0gGg6mRQYYh",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/easttwo2/data_analysis/blob/main/python_web_Crawling_study\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6BCb-QPl2Fzl"
      },
      "outputs": [],
      "source": [
        "from selenium import webdriver\n",
        "from selenium.webdriver.chrome.service import Service\n",
        "from selenium.webdriver.common.by import By\n",
        "import time\n",
        "import pandas as pd\n",
        "\n",
        "# ChromeDriver 경로 설정 (본인 경로로 수정 필요)\n",
        "CHROMEDRIVER_PATH = r'본인 경로 입력'\n",
        "options = webdriver.ChromeOptions()\n",
        "options.add_argument('--window-size=1920x1080')\n",
        "\n",
        "# 브라우저 실행\n",
        "service = Service(CHROMEDRIVER_PATH)\n",
        "driver = webdriver.Chrome(service=service, options=options)\n",
        "\n",
        "# 크롤링 대상 URL 접속\n",
        "url = '??'\n",
        "driver.get(url)\n",
        "time.sleep(3)\n",
        "\n",
        "# 페이지 끝까지 스크롤하여 모든 상품 로딩\n",
        "for _ in range(25):\n",
        "    driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n",
        "    time.sleep(1.2)\n",
        "\n",
        "# 상품 요소 추출\n",
        "items = driver.find_elements(By.CSS_SELECTOR, \"ul > li\")\n",
        "print(\"상품 개수:\", len(items))\n",
        "\n",
        "# 결과 저장 리스트\n",
        "result_list = []\n",
        "\n",
        "for idx, item in enumerate(items, 1):\n",
        "    try:\n",
        "        brand = \"\"\n",
        "        try:\n",
        "            brand = item.find_element(By.CSS_SELECTOR, \"a[data-testid='brand-name']\").text.strip()\n",
        "        except:\n",
        "            brand = \"\"\n",
        "\n",
        "        product_name = \"\"\n",
        "        try:\n",
        "            product_name = item.find_element(By.CSS_SELECTOR, \"h5\").text.strip()\n",
        "        except:\n",
        "            product_name = \"\"\n",
        "\n",
        "        sale_price = \"\"\n",
        "        try:\n",
        "            sale_price = item.find_element(By.CSS_SELECTOR, \"div > div > div > strong\").text.strip()\n",
        "        except:\n",
        "            sale_price = \"\"\n",
        "\n",
        "        discount_rate = \"\"\n",
        "        try:\n",
        "            discount_rate = item.find_element(By.CSS_SELECTOR, \"div > div > div > span\").text.strip()\n",
        "        except:\n",
        "            discount_rate = \"\"\n",
        "\n",
        "        orig_price = \"\"\n",
        "        try:\n",
        "            orig_price = item.find_element(By.CSS_SELECTOR, \"strong.css-746sl9.e1u8w57o7\").text.strip()\n",
        "        except:\n",
        "            orig_price = \"\"\n",
        "\n",
        "        review_count = \"\"\n",
        "        try:\n",
        "            review_count = item.find_element(By.CSS_SELECTOR, \"span.review\").text.strip()\n",
        "        except:\n",
        "            review_count = \"\"\n",
        "\n",
        "        like_count = \"\"\n",
        "        try:\n",
        "            like_btn = item.find_element(By.CSS_SELECTOR, \"div > div > div > button\")\n",
        "            like_count = like_btn.text.strip().replace(',', '') or \"0\"\n",
        "        except:\n",
        "            like_count = \"\"\n",
        "\n",
        "        if product_name or brand:\n",
        "            result_list.append({\n",
        "                \"브랜드\": brand,\n",
        "                \"상품명\": product_name,\n",
        "                \"할인가\": sale_price,\n",
        "                \"원가\": orig_price,\n",
        "                \"할인율\": discount_rate,\n",
        "                \"리뷰수\": review_count,\n",
        "                \"좋아요\": like_count\n",
        "            })\n",
        "\n",
        "    except Exception as e:\n",
        "        continue\n",
        "\n",
        "driver.quit()\n",
        "\n",
        "# 엑셀로 저장 (경로는 본인 환경에 맞게 수정)\n",
        "df = pd.DataFrame(result_list)\n",
        "save_path = r'엑셀 저장 경로 입력'\n",
        "df.to_excel(save_path, index=False)\n",
        "print(\"엑셀 저장 완료:\", save_path)\n"
      ]
    }
  ]
}